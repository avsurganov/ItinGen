
// // Route to register new users  
// router.post('/users', function(req, res) {
// 	var user = new User(); // Create new User object
// 	user.password = user.generateHash(req.body.password); // Save password from request to User object
// 	user.email = req.body.email; // Save email from request to User object
// 	// Check if request is valid and not empty or null
// 	if (req.body.password === null || req.body.password === '' || req.body.email === null || req.body.email === '') {
// 		res.json({ success: false, message: 'Ensure email, and password were provided' });
// 	} else {
// 		// Save new user to database
// 		user.save(function(err) {
// 			if (err) {
// 				// Check if any validation errors exists (from user model)
// 				if (err.errors !== null) {
// 					if (err.errors.email) {
// 						res.json({ success: false, message: err.errors.email.message }); // Display error in validation (email)
// 					} else if (err.errors.password) {
// 						res.json({ success: false, message: err.errors.password.message }); // Display error in validation (password)
// 					} else {
// 						res.json({ success: false, message: err }); // Display any other errors with validation
// 					}
// 				} else if (err) {
// 					// Check if duplication error exists
// 					if (err.code == 11000) {
// 						if (err.errmsg[61] == "u") {
// 							res.json({ success: false, message: 'That username is already taken' }); // Display error if username already taken
// 						} else if (err.errmsg[61] == "e") {
// 							res.json({ success: false, message: 'That e-mail is already taken' }); // Display error if e-mail already taken
// 						}
// 					} else {
// 						res.json({ success: false, message: err }); // Display any other error
// 					}
// 				}
// 			} else {
// 				res.json({ success: true, message: 'Account registered!' }); // Send success message back to controller/request
// 			}
// 		});
// 	}
// });


// // Route for user logins
// router.post('/authenticate', function(req, res) {
// 	var loginUser = req.body.email;
// 	User.findOne({ email: loginUser }).select('email password').exec(function(err, user) {
// 		if (err) {
// 			res.json({ success: false, message: 'Something went wrong. This error has been logged and will be addressed by our staff. We apologize for this inconvenience!' });
// 		} else {
// 			// Check if user is found in the database (based on email)           
// 			if (!user) {
// 				res.json({ success: false, message: 'Username not found' }); // email not found in database
// 			} else if (user) {
// 				if (!req.body.password) {
// 					res.json({ success: false, message: 'No password provided' }); // Password was not provided
// 				} else {
// 					var validPassword = user.comparePassword(req.body.password); // Check if password matches password provided by user 
// 					if (!validPassword) {
// 						res.json({ success: false, message: 'Could not authenticate password' }); // Password does not match password in database
// 					} else {
// 						var token = jwt.sign({ email: user.email}, secret, { expiresIn: '24h' }); // Logged in: Give user token
// 						res.json({ success: true, message: 'User authenticated!', token: token }); // Return token in JSON object to controller
// 					}
// 				}
// 			}
// 		}
// 	});
// });